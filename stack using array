class ArrayStack {
    int[] stack;   
    int top;       
    int capacity;  
 
    ArrayStack(int size) {
        stack = new int[size];
        capacity = size;
        top = -1;
    }

   
    void push(int val) {
        if (top == capacity - 1) {
            System.out.println("Stack Overflow (cannot push " + val + ")");
        } else {
            stack[++top] = val;
            System.out.println(val + " pushed");
        }
    }

    
    void pop() {
        if (isEmpty()) {
            System.out.println("Stack Underflow (stack is empty)");
        } else {
            System.out.println("Popped: " + stack[top--]);
        }
    }

    void peek() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
        } else {
            System.out.println("Top element: " + stack[top]);
        }
    }
    void display() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
        } else {
            System.out.print("Stack elements: ");
            for (int i = top; i >= 0; i--) {
                System.out.print(stack[i] + " ");
            }
            System.out.println();
        }
    }

    boolean isEmpty() {
        return top == -1;
    }
}

class Main {
    public static void main(String[] args) {
        ArrayStack s = new ArrayStack(10); 

        s.push(10);
        s.push(20);
        s.push(30);
        s.push(40);
        s.push(50);
        s.push(60);

        s.display();
        s.peek();
        s.pop();
        s.display();
    }
}
